load("@rules_rust//rust:defs.bzl", "rust_binary")
load("@io_bazel_rules_docker//container:container.bzl", "container_image")
load("@genrules//gcloud:index.bzl", "gcloud_run_deploy", "gcloud_services_enable", "gcloud_auth", "gcloud_auth_print_access_token")
load("@genrules//run_all:index.bzl", "run_all")
load("@genrules//run_if:index.bzl", "run_if")
load("@genrules//crane:index.bzl", "crane_auth_login", "crane_push")

package(default_visibility = ["//visibility:public"])

rust_binary(
    name = "hello_world",
    srcs = ["src/main.rs"],
)

load("@io_bazel_rules_docker//rust:image.bzl", "rust_image")

rust_image(
    name = "rust_image",
    base = ":docker_base",
    binary = ":hello_world",
)

container_image(
  name = "docker_base",
  base = "@cc_image_base//image",
  ports = [
    "8080/tcp",
  ],
  docker_run_flags = "--init --rm -p 8080:8080",
  legacy_run_behavior = False,
)

run_all(
    name="deploy",
    steps = [
        ":auth",
        ":access_token",
        ":gcr_login",
        ":push_image",
        ":enable_cloud_run",
        ":deploy_image",
    ],
)

gcloud_auth_print_access_token(
    name = "access_token",
    out = "~/access_token",
)

crane_auth_login(
    name = "gcr_login",
    registry = "gcr.io",
    user = "oauth2accesstoken",
    password = "$(cat ~/access_token)",
)

crane_push(
    name = "push_image",
    target = ":rust_image.tar",
    image = "gcr.io/$GCP_PROJECT/rust_image:latest"
)

gcloud_services_enable(
    name = "enable_cloud_run",
    service = "run.googleapis.com",
    project = "$GCP_PROJECT",
)

gcloud_run_deploy(
    name = "deploy_image",
    service = "test-$RANDOM",
    image = "gcr.io/$GCP_PROJECT/rust_image:latest",
    port = "8080",
    region = "us-west1",
    project = "$GCP_PROJECT",
    allow_unauthenticated = True,
)

gcloud_auth(
    name = "auth"
)